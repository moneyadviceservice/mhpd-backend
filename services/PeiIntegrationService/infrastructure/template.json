{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127",
      "templateHash": "10602523904429381366"
    }
  },
  "parameters": {
    "webAppName": {
      "type": "string",
      "defaultValue": "PeiIntegratiionService",
      "minLength": 2,
      "metadata": {
        "description": "Web app name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "linuxFxVersion": {
        "type": "string",
        "defaultValue": "DOTNETCORE|8.0",
        "metadata": {
            "description": "The Runtime stack of current web app"
        }
    },
    "appServicePlanName": {
        "type": "string",
        "metadata": {
            "description": "The name of the app service plan to register the app service under"
        },
        "defaultValue": "mhpd-cloudservices-asp-dev"
    },
    "infrastructureResourceGroup": {
        "type": "string",
        "metadata" : {
            "description": "The name of the resource group in which the common infrastructure used by backend services exits"
        },
        "defaultValue": "mhpd-cloudservices-rg-dev"
    }
  },
  "variables": {
    "appServicePlan_externalId": "[resourceId(parameters('infrastructureResourceGroup'), 'Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[variables('appServicePlan_externalId')]",
        "siteConfig": {
          "linuxFxVersion": "[parameters('linuxFxVersion')]",
          "minTlsVersion": "1.2",
          "ftpsState": "FtpsOnly"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      }
    }
  ],
   "outputs": {
        "resourceGroupName":{
            "type": "string",
            "value": "[resourceGroup().name]"
        }
    }
}