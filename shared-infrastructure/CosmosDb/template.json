{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "7578513359154607542"
    }
  },
  "parameters": {
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "[format('sql-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Azure Cosmos DB account name, max length 44 characters"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the Azure Cosmos DB account."
      }
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "myDatabase",
      "metadata": {
        "description": "The name for the database"
      }
    },
    "viewdatapayloadsContainerName": {
      "type": "string",
      "defaultValue": "viewdatapayloads",
      "metadata": {
        "description": "The name for the container"
      }
    },
    "peisContainerName": {
      "type": "string",
      "defaultValue": "cdaPeisEmulatorScenarioModels",
      "metadata": {
        "description": "The name for the container"
      }
    },
    "cdaPeisEmulatorTestInstanceDataContainerName": {
      "type": "string",
      "defaultValue": "cdaPeisEmulatorTestInstanceData",
      "metadata": {
        "description": "The name for the container"
      }
    },
    "tokenEmulatorPiesIdScenarioModelContainerName": {
      "type": "string",
      "defaultValue": "tokenEmulatorPiesIdScenarioModels",
      "metadata": {
        "description": "The name for the container"
      }
    },
	"holderNameViewDataContainerName": {
      "type": "string",
      "defaultValue": "holdernameViewConfigurationEmulatorData",
      "metadata": {
        "description": "The name for the container"
      }
    },
    "throughput": {
      "type": "int",
      "defaultValue": 400,
      "minValue": 400,
      "maxValue": 1000000,
      "metadata": {
        "description": "The throughput for the container"
      }
    },
    "ttl": {
      "type": "int",
      "defaultValue": 3600,
      "metadata": {
        "description": "The default time-to-live (TTL) for the container"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[toLower(parameters('cosmosDbAccountName'))]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "locations": [
          {
            "locationName": "[parameters('location')]"
          }
        ],
        "databaseAccountOfferType": "Standard",
        "disableKeyBasedMetadataWriteAccess": true
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', toLower(parameters('cosmosDbAccountName')), parameters('databaseName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('databaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(parameters('cosmosDbAccountName')))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', toLower(parameters('cosmosDbAccountName')), parameters('databaseName'), parameters('viewdatapayloadsContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('viewdatapayloadsContainerName')]",
          "partitionKey": {
            "paths": [
              "/assetGuid"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/_etag/?"
              }
            ]
          }
        },
        "options": {
          "throughput": "[parameters('throughput')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(parameters('cosmosDbAccountName')), parameters('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[concat(parameters('cosmosDbAccountName'), '/', parameters('databaseName'), '/', parameters('peisContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('peisContainerName')]",
          "partitionKey": {
            "paths": [
              "/peisIdStartCode"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": [
              {
                "paths": [
                  "/peisIdStartCode"
                ]
              }
            ]
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": []
          }
        },
        "options": {
          "throughput": "[parameters('throughput')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[concat(parameters('cosmosDbAccountName'), '/', parameters('databaseName'), '/', parameters('cdaPeisEmulatorTestInstanceDataContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('cdaPeisEmulatorTestInstanceDataContainerName')]",
          "defaultTtl": "[parameters('ttl')]",
          "partitionKey": {
            "paths": [
              "/peisId"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": [
              {
                "paths": [
                  "/peisId"
                ]
              }
            ]
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": []
          }
        },
        "options": {
          "throughput": "[parameters('throughput')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[concat(parameters('cosmosDbAccountName'), '/', parameters('databaseName'), '/', parameters('tokenEmulatorPiesIdScenarioModelContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('tokenEmulatorPiesIdScenarioModelContainerName')]",
          "partitionKey": {
            "paths": [
              "/code"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": [
              {
                "paths": [
                  "/code"
                ]
              }
            ]
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": []
          }
        },
        "options": {
          "throughput": "[parameters('throughput')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('databaseName'))]"
      ]
    },
	{
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[concat(parameters('cosmosDbAccountName'), '/', parameters('databaseName'), '/', parameters('holderNameViewDataContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('holderNameViewDataContainerName')]",
          "partitionKey": {
            "paths": [
              "/holdernameGuid"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": [
              {
                "paths": [
                  "/holdernameGuid"
                ]
              }
            ]
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
                {
                  "path": "/holdernameGuid/?"
                }
              ],
              "excludedPaths": [
				{
                  "path": "/*"
                }
			  ]
          }
        },
        "options": {
          "throughput": "[parameters('throughput')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('databaseName'))]"
      ]
    }
  ],
  "outputs": {
    "location": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "name": {
      "type": "string",
      "value": "[parameters('databaseName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(parameters('cosmosDbAccountName')), parameters('databaseName'))]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(parameters('cosmosDbAccountName')).documentEndpoint]"
    },
    "cosmosDbPrimaryKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-04-15').primaryMasterKey]"
    }
  }
}